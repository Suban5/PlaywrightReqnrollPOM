name: Playwright Tests with Reqnroll

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run Playwright Reqnroll Tests
    runs-on: windows-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 3. Restore dependencies and tools
      - name: Restore dependencies and tools
        run: |
          dotnet restore
          dotnet tool restore

      # 4. Build the project
      - name: Build the project
        run: dotnet build --configuration Debug

      # 5. Install Playwright browsers
      - name: Install Playwright browsers
        run: dotnet playwright install

      # 6. Set CI environment for config
      - name: Set ASPNETCORE_ENVIRONMENT to CI
        run: echo "ASPNETCORE_ENVIRONMENT=CI" >> $env:GITHUB_ENV

      # 7.1 Create TestResults directory
      - name: Create TestResults directory
        run: mkdir TestResults

      # 7.2 Run tests with NUnit XML logger
      - name: Run Tests
        run: dotnet test --no-build --logger "nunit;LogFilePath=${{ github.workspace }}\TestResults\TestResults.xml"
        working-directory: ${{ github.workspace }}

     
      # 9. Upload test results (use wildcard to catch all XML files)
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: ${{ github.workspace }}\TestResults\**\*.xml

      # 10. Install Pickles as a .NET global tool
      - name: Install Pickles
        run: dotnet tool install --global Pickles.CommandLine

      # 11. Generate Pickles Living Documentation (single line for PowerShell)
      - name: Generate Pickles Living Documentation
        run: >
          pickles
          --feature-directory=PlaywrightReqnrollFramework\Features
          --output-directory=PicklesOutput
          --test-results-format=NUnit
          --link-results-file=TestResults\TestResults.xml
          --documentation-format=dhtml

      # 12. Upload Pickles report
      - name: Upload Pickles Living Documentation
        uses: actions/upload-artifact@v4
        with:
          name: pickles-report
          path: PicklesOutput/